version: "2"
services:
  sharelatex:
    image: rancher/dns-service
    links:
      - loadbalancer
  public-chat:
    image: rancher/dns-service
    links:
      - loadbalancer
  docs:
    image: rancher/dns-service
    links:
      - loadbalancer
  base:
    image: mic92/sharelatex-base
    build:
      context: base
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    command: /bin/true
    labels:
      io.rancher.container.start_once: "True"
      tk.higgsboson.no-scheduling: "True"
  nodejs:
    image: mic92/sharelatex-nodejs
    build:
      context: nodejs
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    command: /bin/true
    depends_on:
      - base
    labels:
      io.rancher.container.start_once: "True"
      tk.higgsboson.no-scheduling: "True"
  loadbalancer:
    image: rancher/load-balancer-service
    ports:
      - 80:80
    links:
      - web:web1
      - real-time:real-time1
      - chat:chat1
      - docstore:docstore1
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=application'
      io.rancher.loadbalancer.target.real-time: sharelatex.local/socket.io=3000
      io.rancher.loadbalancer.target.web: sharelatex.local=3000
      io.rancher.loadbalancer.target.chat: public-chat.local=3000
      io.rancher.loadbalancer.target.docstore: docs.local=3000
  chat:
    image: mic92/sharelatex-chat
    build:
      context: chat
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    links:
      - mongo
      - redis
    depends_on:
      - nodejs
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=application'
  clsi:
    image: mic92/sharelatex-clsi
    build:
      context: clsi
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    links:
      - postgres
    depends_on:
      - nodejs
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=application'
  contacts:
    image: mic92/sharelatex-contacts
    build:
      context: contacts
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    links:
      - mongo
    depends_on:
      - nodejs
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=application'
  docstore:
    image: mic92/sharelatex-docstore
    build:
      context: docstore
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    links:
      - mongo
    depends_on:
      - nodejs
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=application'
  document-updater:
    image: mic92/sharelatex-document-updater
    build:
      context: document-updater
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    links:
      - mongo
      - redis
    depends_on:
      - nodejs
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=application'
  real-time:
    image: mic92/sharelatex-real-time
    build:
      context: real-time
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    links:
      - redis
      - document-updater
    depends_on:
      - nodejs
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=application'
  filestore:
    image: mic92/sharelatex-filestore
    build:
      context: filestore
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    volumes:
      - datafilestore:/data
    depends_on:
      - nodejs
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=application'
  spelling:
    image: mic92/sharelatex-spelling
    build:
      context: spelling
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    links:
      - mongo
    depends_on:
      - nodejs
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=application'
  tags:
    image: mic92/sharelatex-tags
    build:
      context: tags
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    links:
      - mongo
    depends_on:
      - nodejs
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=application'
  track-changes:
    image: mic92/sharelatex-track-changes
    build:
      context: track-changes
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    links:
      - mongo
      - redis
      - docstore
      - document-updater
    depends_on:
      - nodejs
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=application'
  web:
    image: mic92/sharelatex-web
    build:
      context: web
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    volumes:
      - dataweb:/app/data
    links:
      - mongo
      - redis
      - contacts
      - docstore
      - document-updater
      - filestore
      - spelling
      - tags
      - chat
      - clsi
    depends_on:
      - nodejs
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=application'
  redis:
    image: mic92/sharelatex-redis
    build:
      context: redis
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    depends_on:
      - base
    volumes:
      - dataredis:/data
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=database'
  mongo:
    image: mic92/sharelatex-mongo
    build:
      context: mongo
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    depends_on:
      - base
    volumes:
      - datamongo:/data/db
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=database'
  postgres:
    image: mic92/sharelatex-postgres
    build:
      context: postgres
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    depends_on:
      - base
    volumes:
      - datapostgres:/var/lib/postgresql/data
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=database'
  influxdb:
    image: mic92/sharelatex-influxdb
    build:
      context: influxdb
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    ports:
      - "8083:8083"
      - "8086:8086"
    depends_on:
      - base
    volumes:
      - datainfluxdb:/data
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=monitoring'
  kapacitor:
    image: mic92/sharelatex-kapacitor
    build:
      context: kapacitor
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    depends_on:
      - base
    volumes:
      - /data/kapacitor:/data
    links:
      - influxdb
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=monitoring'
  telegraph:
    image: mic92/sharelatex-telegraph
    build:
      context: telegraph
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    depends_on:
      - base
    volumes:
      - /data/kapacitor:/data
    links:
      - influxdb
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=monitoring'
  grafana:
    image: mic92/sharelatex-grafana
    build:
      context: grafana
      args:
        - http_proxy
        - https_proxy
        - ftp_proxy
        - no_proxy
    depends_on:
      - base
    links:
      - influxdb
      - postgres
    ports:
      - "3000:3000"
    labels:
      io.rancher.scheduler.affinity:host_label: 'type=monitoring'
volumes:
    dataredis:
      driver: local
    datamongo:
      driver: local
    datapostgres:
      driver: local
    datafilestore:
      driver: local
    dataweb:
      driver: local
    datainfluxdb:
      driver: local
