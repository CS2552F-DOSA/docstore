import numpy as np
import matplotlib.pyplot as mplt
import math

from matplotlib.backends.backend_pdf import PdfPages


# small file size, directly on storage envoy.
intervals_between_each_get_and_post_request = [
    1, 0.7, 0.3, 0.1, 0.07, 0.03, 0.01, 0.007, 0.003, 0.001]
on_storage_equivalence_data_rate = [107.93200489256292, 152.86210480493926, 343.60815619303264, 919.7539638115985,
                                    1237.8907049152376, 2222.596026950745, 3880.3318841946093, 4000.5480736876434, 5195.422062932818, 5445.265417326081]

on_storage_avg_wall_time_post = [0.011007137298583984, 0.011383681297302247, 0.011306736469268799, 0.011005146503448486,
                                 0.010616796016693115, 0.010877757072448731, 0.010207948684692382, 0.011581284999847412, 0.010162689685821534, 0.010475637912750245]
on_storage_avg_wall_time_get = [0.00815302848815918, 0.008219127655029296, 0.008825361728668213, 0.008592054843902588,
                                0.008244037628173828, 0.008613917827606201, 0.008140141963958741, 0.008914947509765625, 0.008009796142578124, 0.00872539758682251]

# middle file size, directly on storage envoy.
intervals_between_each_get_and_post_request = [
    1, 0.7, 0.3, 0.1, 0.07, 0.03, 0.01, 0.007, 0.003, 0.001]
on_storage_equivalence_data_rate = [1079.5317192586115, 1529.124880636713, 3444.85574620121, 9204.102345375795,
                                    12432.66471621941, 22221.17205272934, 37395.338492684954, 41339.16943877852, 51750.299471344864, 53576.205054419785]

on_storage_avg_wall_time_post = [0.010587840080261231, 0.010788860321044922, 0.010702981948852539, 0.011033992767333984,
                                 0.010347816944122314, 0.010783917903900146, 0.010678024291992187, 0.011152350902557373, 0.010023131370544433, 0.011162886619567871]
on_storage_avg_wall_time_get = [0.008372492790222168, 0.0085768461227417, 0.008613727092742919, 0.008477933406829834,
                                0.008128790855407715, 0.008718421459197998, 0.008737406730651855, 0.00845679521560669, 0.008232784271240235, 0.008368616104125976]


# large file size, directly on storage envoy.
intervals_between_each_get_and_post_request = [
    1, 0.7, 0.3, 0.1, 0.07, 0.03, 0.01, 0.007, 0.003, 0.001]
on_storage_equivalence_data_rate = [10741.616141709024, 15220.887101735256, 34054.464224128176, 89281.55252180334,
                                    117682.6888517342, 208726.5855029096, 330667.91812638246, 370007.8524131907, 427351.9828346891, 461318.9397804543]

on_storage_avg_wall_time_post = [0.013916032314300537, 0.013037164211273194, 0.013517446517944336, 0.013399248123168945,
                                 0.013731780052185059, 0.012978966236114503, 0.013688273429870605, 0.013212850093841553, 0.013333084583282471, 0.013402199745178223]
on_storage_avg_wall_time_get = [0.010138435363769531, 0.009653959274291992, 0.00949453592300415, 0.00980649471282959,
                                0.009739911556243897, 0.009721555709838868, 0.00957772970199585, 0.00951624870300293, 0.009406821727752685, 0.009442474842071533]


# small file size, modification without file diff.
intervals_between_each_get_and_post_request = [
    1, 0.7, 0.3, 0.1, 0.07, 0.03, 0.01, 0.007, 0.003, 0.001]
without_diff_equivalence_data_rate = [109.66567492748771, 155.54926190222304, 360.8001352945454, 1026.4528843128792,
                                      1469.680660208109, 2832.4237009544727, 7135.534237766162, 6826.521417231918, 13098.227714015899, 14418.521973292385]
without_diff_avg_wall_time_post = [0.009730786085128784, 0.010060800446404351, 0.010080728530883789, 0.010908617692835191,
                                   0.011781817390805199, 0.010342690077694979, 0.01040374791180646, 0.009830611817380215, 0.009767753737313407, 0.01026493130308209]
without_diff_avg_wall_time_get = [0.010991036891937256, 0.011313083171844483, 0.01122492790222168, 0.011552472114562989, 0.012135641574859619,
                                  0.011155095100402832, 0.011095385551452636, 0.010722799301147461, 0.011451082229614258, 0.010948750972747803]

# middle file size, modification without file diff.
intervals_between_each_get_and_post_request = [
    1, 0.7, 0.3, 0.1, 0.07, 0.03, 0.01, 0.007, 0.003, 0.001]
without_diff_equivalence_data_rate = [1093.3602391585232, 1549.2351933471703, 3569.056390361087, 10301.625928617546,
                                      14508.710523084217, 29881.329835880915, 65073.46079852864, 93296.36152767167, 149344.50367640393, 194540.47686833702]
without_diff_avg_wall_time_post = [0.011124687535422189, 0.010797013839085897, 0.01064179539680481, 0.010283021365894991, 0.010417551829897124,
                                   0.010592626802849047, 0.010785893031529019, 0.01041783889134725, 0.011291098594665528, 0.009860763947168985]
without_diff_avg_wall_time_get = [0.011895878314971924, 0.011400468349456787, 0.010941574573516846, 0.011097769737243652, 0.011019721031188964,
                                  0.0108654522895813, 0.010730087757110596, 0.011204841136932374, 0.012500851154327393, 0.010982799530029296]

# large file size, modification without file diff.
intervals_between_each_get_and_post_request = [
    1, 0.7, 0.3, 0.1, 0.07, 0.03, 0.01, 0.007, 0.003, 0.001]

without_diff_equivalence_data_rate = [10930.838607154536, 15569.469596869594, 36103.96537325542, 102185.33730965114,
                                      144368.37219420233, 313607.46632654994, 821488.9962389877, 677005.9377748476, 929942.1774057723, 1542200.1195725154]
without_diff_avg_wall_time_post = [0.012769203919630785, 0.01321872381063608, 0.013043729882491263, 0.012825942808581937,
                                   0.013624362945556641, 0.013364040851593017, 0.012605088097708566, 0.012703657150268555, 0.013540008488823385, 0.01252685546875]
without_diff_avg_wall_time_get = [0.012287945747375488, 0.012277476787567139, 0.012703912258148193, 0.012191905975341796,
                                  0.012280492782592774, 0.012859435081481933, 0.012797636985778809, 0.01218264102935791, 0.0125789213180542, 0.012289159297943116]

# small file size, modification with file diff.
intervals_between_each_get_and_post_request = [
    1, 0.7, 0.3, 0.1, 0.07, 0.03, 0.01, 0.007, 0.003, 0.001]
with_diff_equivalence_data_rate = [107.1991339948944, 151.39663776225592, 337.1035649585148, 869.5419636999234,
                                   1133.783557818322, 1987.1547642064656, 3094.393419709483, 3448.7954975124558, 3725.504106922406, 3785.9743141729987]
with_diff_delta_data_rate = [2.143982679897888, 3.0279327552451187, 6.742071299170298, 17.39083927399847, 22.675671156366445,
                             39.74309528412932, 61.887868394189674, 68.97590995024913, 74.51008213844814, 75.71948628345999]
with_diff_avg_wall_time_post = [0.013430838584899902, 0.012040871381759643, 0.012342588901519775, 0.01256730079650879, 0.013850221633911133,
                                0.01345512866973877, 0.01331497311592102, 0.013556511402130126, 0.013148270845413208, 0.013464205265045166]
with_diff_avg_wall_time_get = [0.01347468137741089, 0.01247637629508972, 0.012585538625717162, 0.012649372816085816, 0.013559309244155883,
                               0.013302607536315918, 0.01324500799179077, 0.013247655630111694, 0.013280625343322755, 0.013424750566482544]


# middle file size, modification with file diff.
intervals_between_each_get_and_post_request = [
    1, 0.7, 0.3, 0.1, 0.07, 0.03, 0.01, 0.007, 0.003, 0.001]
with_diff_equivalence_data_rate = [1071.1793622848302, 1518.2523308135574, 3385.3640445694964, 8784.772572726763,
                                   11292.529489510958, 19380.617930329936, 30087.542899959844, 32540.36695981413, 37378.22828778165, 39442.136401409465]
with_diff_delta_data_rate = [21.423587245696602, 30.365046616271147, 67.70728089138993, 175.69545145453526,
                             225.85058979021915, 387.6123586065987, 601.7508579991969, 650.8073391962827, 747.564565755633, 788.8427280281894]

with_diff_avg_wall_time_post = [0.01307267665863037, 0.013205207586288452, 0.013112626075744628, 0.013143527507781982, 0.013723211288452148,
                                0.012520102262496948, 0.012666409015655517, 0.012444920539855957, 0.0131941556930542, 0.014142385721206664]
with_diff_avg_wall_time_get = [0.013055015802383423, 0.013363107442855834, 0.013196589946746827, 0.01335985541343689, 0.013297070264816285,
                               0.012835425138473511, 0.01288175344467163, 0.012450273036956788, 0.01333204984664917, 0.013912222385406493]

# large file size, modification with file diff.
intervals_between_each_get_and_post_request = [
    1, 0.7, 0.3, 0.1, 0.07, 0.03, 0.01, 0.007, 0.003, 0.001]
with_diff_equivalence_data_rate = [10717.588988674557, 15126.18875689136, 33518.994500141926, 85790.1989245057,
                                   112486.96856462864, 198702.54925627285, 308163.4588002848, 349836.3086587052, 381658.0276754728, 452696.0756104446]
with_diff_delta_data_rate = [214.35177977349116, 302.5237751378272, 670.3798900028385, 1715.8039784901139,
                             2249.7393712925727, 3974.050985125457, 6163.269176005696, 6996.726173174104, 7633.160553509456, 9053.921512208892]
with_diff_avg_wall_time_post = [0.013295341730117798, 0.013576300144195556, 0.013920915126800538, 0.014147014617919921, 0.013948493003845215,
                                0.012584246397018432, 0.012927759885787964, 0.012376983165740967, 0.012935144901275635, 0.011722080707550049]
with_diff_avg_wall_time_get = [0.013054895401000976, 0.013639271259307861, 0.014251220226287841, 0.014072760343551635, 0.013840612173080444,
                               0.012774882316589355, 0.012767581939697266, 0.012066293954849244, 0.012886468172073364, 0.011576782464981079]


mplt.figure()
mplt.xlabel('Test Type')
mplt.ylabel('Decompressin Speed (MB/sec)')
name_list = ['Data1', 'Data2', 'Data3', 'Data4',
             'Data5', 'Data6', 'Data7', 'Data8', 'Data9']
x = list(range(len(name_list)))
num_list1 = [36.9746, 44.1788, 97.0161, 71.8731,
             93.5363, 81.629, 63.1906, 93.5405, 50.562]
num_list2 = [30.2927, 31.6845, 68.1367, 40.1445,
             66.8377, 59.608, 51.0582, 68.1277, 37.9224]
num_list3 = [34.1703, 87.791, 61.9662, 59.2425,
             84.8398, 98.1518, 67.868, 93.1387, 59.9379]

total_width, n = 0.8, 3
width = total_width / n
#tick_label = name_list

mplt.bar(x, num_list1, width=width, label='Gorilla')
for i in range(len(x)):
    x[i] = x[i] + width

mplt.bar(x, num_list2, width=width,
         label='Middle-Out Column Order', tick_label=name_list)
for i in range(len(x)):
    x[i] = x[i] + width

mplt.bar(x, num_list3, width=width,
         label='Middle-Out Row Order')
# mplt.title('Compressed time for different dimension with Gorilla, Middle-Out Column Order, and Middle-Out Row Order')

# mplt.plot(dimension, decompressed_data_rate1, label="Gorilla")
# mplt.plot(dimension, decompressed_data_rate2, label="Middle-Out Column Order")
# mplt.plot(dimension, decompressed_data_rate3,
#           label="Middle-Out Row Order")
mplt.ylim((0, 128))
mplt.legend()
mplt.savefig(
    fname="/Users/tiancan/Desktop/test_decompressin_speed.pdf", format="pdf")
mplt.show()


# pdf.savefig(mplt)
mplt.close()
# pdf.close()
